name: Ingest Seed (manual)
on: { workflow_dispatch: {} }

jobs:
  seed:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: packages/ingest } }
    env:
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
      SSL_CA_PEM: ${{ secrets.SSL_CA_PEM }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '22.x' }
      - name: Show resolved env
        shell: bash
        run: |
          echo "PG_SNI_HOST=$PG_SNI_HOST"
          echo "PG_HOST_OVERRIDE=$PG_HOST_OVERRIDE"
          echo "NODE_EXTRA_CA_CERTS=$NODE_EXTRA_CA_CERTS"
          echo "SSL_CA_PEM_PATH=$SSL_CA_PEM_PATH"

      - name: Force IPv4 for Supabase DB
        shell: bash
        run: |
          set -euo pipefail
          H="db.yunfbzwdftdnclmdcjhh.supabase.co"

          # 1) Try local resolver quickly (ignore failures)
          IP="$(getent ahostsv4 "$H" 2>/dev/null | awk 'NR==1 {print $1}' || true)"
          if [ -z "${IP:-}" ]; then
            IP="$(getent hosts "$H" 2>/dev/null | grep -m1 -E '^[0-9]+\.' | awk '{print $1}' || true)"
          fi

          # 2) DNS-over-HTTPS (Cloudflare then Google) via Python stdlib (no jq/dig needed)
          if [ -z "${IP:-}" ]; then
            py='import json,sys,urllib.request as u,urllib.parse as p;
      Q=sys.argv[1]; URL="https://cloudflare-dns.com/dns-query?"+p.urlencode({"name":Q,"type":"A"});
      try:
        r=u.Request(URL,headers={"accept":"application/dns-json"}); d=json.load(u.urlopen(r))
        a=[x["data"] for x in d.get("Answer",[]) if x.get("type")==1]
        print(a[0]) if a else sys.exit(1)
      except Exception: sys.exit(1)'
            IP="$(python3 -c "$py" "$H" || true)"
          fi

          if [ -z "${IP:-}" ]; then
            py='import json,sys,urllib.request as u,urllib.parse as p;
      Q=sys.argv[1]; URL="https://dns.google/resolve?"+p.urlencode({"name":Q,"type":"A"});
      try:
        d=json.load(u.urlopen(URL))
        a=[x["data"] for x in d.get("Answer",[]) if x.get("type")==1]
        print(a[0]) if a else sys.exit(1)
      except Exception: sys.exit(1)'
            IP="$(python3 -c "$py" "$H" || true)"
          fi

          if [ -z "${IP:-}" ]; then
            echo "No IPv4 found for $H (only AAAA visible). Proceeding without override."
            # Do NOT hard-fail here; let the Node step run so we can see the exact pg error.
            exit 0
          fi

          echo "Resolved $H -> $IP"
          {
            echo "PG_SNI_HOST=$H"
            echo "PG_HOST_OVERRIDE=$IP"
          } >> "$GITHUB_ENV"

      - name: Write CA file
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p /tmp/certs
          echo "${{ secrets.SSL_CA_PEM }}" > /tmp/certs/supabase-root-2021.pem
          {
            echo "NODE_EXTRA_CA_CERTS=/tmp/certs/supabase-root-2021.pem"
            echo "SSL_CA_PEM_PATH=/tmp/certs/supabase-root-2021.pem"
          } >> "$GITHUB_ENV"
          
      - run: npm ci
      - name: db:seed
        run: npm run db:seed
